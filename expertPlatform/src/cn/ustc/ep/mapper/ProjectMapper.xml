<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ustc.ep.mapper.ProjectMapper" >
  <resultMap id="BaseResultMap" type="cn.ustc.ep.po.Project" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="e_id" property="eId" jdbcType="INTEGER" />
    <result column="process" property="process" jdbcType="VARCHAR" />
    <result column="current" property="current" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="budget" property="budget" jdbcType="DOUBLE" />
    <result column="publicDate" property="publicdate" jdbcType="DATE" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="deadline" property="deadline" jdbcType="DATE" />
    <result column="finishDate" property="finishdate" jdbcType="DATE" />
    <result column="confirm" property="confirm" jdbcType="VARCHAR" />
    <result column="checked" property="checked" jdbcType="VARCHAR" />
    <result column="addition" property="addition" jdbcType="VARCHAR" />
    <result column="contractId" property="contractid" jdbcType="VARCHAR" />
    <result column="projectCircle" property="projectcircle" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, c_id, e_id, process, current, name, content, budget, publicDate, startDate, deadline, 
    finishDate, confirm, checked, addition, contractId, projectCircle
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.ustc.ep.po.ProjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ustc.ep.po.ProjectExample" >
    delete from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ustc.ep.po.Project" >
  	
    insert into project (id, c_id, e_id, 
      process, current, name, 
      content, budget, publicDate, 
      startDate, deadline, finishDate, 
      confirm, checked, addition, 
      contractId, projectCircle)
    values (#{id,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, #{eId,jdbcType=INTEGER}, 
      #{process,jdbcType=VARCHAR}, #{current,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{budget,jdbcType=DOUBLE}, #{publicdate,jdbcType=DATE}, 
      #{startdate,jdbcType=DATE}, #{deadline,jdbcType=DATE}, #{finishdate,jdbcType=DATE}, 
      #{confirm,jdbcType=VARCHAR}, #{checked,jdbcType=VARCHAR}, #{addition,jdbcType=VARCHAR}, 
      #{contractid,jdbcType=VARCHAR}, #{projectcircle,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ustc.ep.po.Project" >
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cId != null" >
        c_id,
      </if>
      <if test="eId != null" >
        e_id,
      </if>
      <if test="process != null" >
        process,
      </if>
      <if test="current != null" >
        current,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="budget != null" >
        budget,
      </if>
      <if test="publicdate != null" >
        publicDate,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="finishdate != null" >
        finishDate,
      </if>
      <if test="confirm != null" >
        confirm,
      </if>
      <if test="checked != null" >
        checked,
      </if>
      <if test="addition != null" >
        addition,
      </if>
      <if test="contractid != null" >
        contractId,
      </if>
      <if test="projectcircle != null" >
        projectCircle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="eId != null" >
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="process != null" >
        #{process,jdbcType=VARCHAR},
      </if>
      <if test="current != null" >
        #{current,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="budget != null" >
        #{budget,jdbcType=DOUBLE},
      </if>
      <if test="publicdate != null" >
        #{publicdate,jdbcType=DATE},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=DATE},
      </if>
      <if test="finishdate != null" >
        #{finishdate,jdbcType=DATE},
      </if>
      <if test="confirm != null" >
        #{confirm,jdbcType=VARCHAR},
      </if>
      <if test="checked != null" >
        #{checked,jdbcType=VARCHAR},
      </if>
      <if test="addition != null" >
        #{addition,jdbcType=VARCHAR},
      </if>
      <if test="contractid != null" >
        #{contractid,jdbcType=VARCHAR},
      </if>
      <if test="projectcircle != null" >
        #{projectcircle,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ustc.ep.po.ProjectExample" resultType="java.lang.Integer" >
    select count(*) from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update project
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null" >
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.eId != null" >
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.process != null" >
        process = #{record.process,jdbcType=VARCHAR},
      </if>
      <if test="record.current != null" >
        current = #{record.current,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.budget != null" >
        budget = #{record.budget,jdbcType=DOUBLE},
      </if>
      <if test="record.publicdate != null" >
        publicDate = #{record.publicdate,jdbcType=DATE},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=DATE},
      </if>
      <if test="record.finishdate != null" >
        finishDate = #{record.finishdate,jdbcType=DATE},
      </if>
      <if test="record.confirm != null" >
        confirm = #{record.confirm,jdbcType=VARCHAR},
      </if>
      <if test="record.checked != null" >
        checked = #{record.checked,jdbcType=VARCHAR},
      </if>
      <if test="record.addition != null" >
        addition = #{record.addition,jdbcType=VARCHAR},
      </if>
      <if test="record.contractid != null" >
        contractId = #{record.contractid,jdbcType=VARCHAR},
      </if>
      <if test="record.projectcircle != null" >
        projectCircle = #{record.projectcircle,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project
    set id = #{record.id,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      e_id = #{record.eId,jdbcType=INTEGER},
      process = #{record.process,jdbcType=VARCHAR},
      current = #{record.current,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      budget = #{record.budget,jdbcType=DOUBLE},
      publicDate = #{record.publicdate,jdbcType=DATE},
      startDate = #{record.startdate,jdbcType=DATE},
      deadline = #{record.deadline,jdbcType=DATE},
      finishDate = #{record.finishdate,jdbcType=DATE},
      confirm = #{record.confirm,jdbcType=VARCHAR},
      checked = #{record.checked,jdbcType=VARCHAR},
      addition = #{record.addition,jdbcType=VARCHAR},
      contractId = #{record.contractid,jdbcType=VARCHAR},
      projectCircle = #{record.projectcircle,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ustc.ep.po.Project" >
    update project
    <set >
      <if test="cId != null" >
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="eId != null" >
        e_id = #{eId,jdbcType=INTEGER},
      </if>
      <if test="process != null" >
        process = #{process,jdbcType=VARCHAR},
      </if>
      <if test="current != null" >
        current = #{current,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="budget != null" >
        budget = #{budget,jdbcType=DOUBLE},
      </if>
      <if test="publicdate != null" >
        publicDate = #{publicdate,jdbcType=DATE},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="finishdate != null" >
        finishDate = #{finishdate,jdbcType=DATE},
      </if>
      <if test="confirm != null" >
        confirm = #{confirm,jdbcType=VARCHAR},
      </if>
      <if test="checked != null" >
        checked = #{checked,jdbcType=VARCHAR},
      </if>
      <if test="addition != null" >
        addition = #{addition,jdbcType=VARCHAR},
      </if>
      <if test="contractid != null" >
        contractId = #{contractid,jdbcType=VARCHAR},
      </if>
      <if test="projectcircle != null" >
        projectCircle = #{projectcircle,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ustc.ep.po.Project" >
    update project
    set c_id = #{cId,jdbcType=INTEGER},
      e_id = #{eId,jdbcType=INTEGER},
      process = #{process,jdbcType=VARCHAR},
      current = #{current,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      budget = #{budget,jdbcType=DOUBLE},
      publicDate = #{publicdate,jdbcType=DATE},
      startDate = #{startdate,jdbcType=DATE},
      deadline = #{deadline,jdbcType=DATE},
      finishDate = #{finishdate,jdbcType=DATE},
      confirm = #{confirm,jdbcType=VARCHAR},
      checked = #{checked,jdbcType=VARCHAR},
      addition = #{addition,jdbcType=VARCHAR},
      contractId = #{contractid,jdbcType=VARCHAR},
      projectCircle = #{projectcircle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- add by chengshuo -->
  <resultMap id="BaseMobileMap" type="cn.ustc.ep.mobilePo.MobileProject" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="c_name" property="c_name" jdbcType="VARCHAR" />
    <result column="e_id" property="eId" jdbcType="INTEGER" />
    <result column="e_name" property="e_name" jdbcType="VARCHAR" />
    <result column="process" property="process" jdbcType="VARCHAR" />
    <result column="current" property="current" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="budget" property="budget" jdbcType="DOUBLE" />
    <result column="publicDate" property="publicdate" jdbcType="DATE" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="deadline" property="deadline" jdbcType="DATE" />
    <result column="finishDate" property="finishdate" jdbcType="DATE" />
    <result column="confirm" property="confirm" jdbcType="VARCHAR" />
    <result column="checked" property="checked" jdbcType="VARCHAR" />
    <result column="addition" property="addition" jdbcType="VARCHAR" />
    <result column="contractId" property="contractid" jdbcType="VARCHAR" />
    <result column="projectCircle" property="projectcircle" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectProjectByNewDate" resultMap="BaseMobileMap" parameterType="java.lang.Integer">
    select distinct p.*,c.companyName AS c_name,e.realName AS e_name
    from project p,expert e,company c WHERE p.c_id=c.id AND p.e_id=e.id AND p.current != 3 order by publicDate limit #{projectSize,jdbcType=INTEGER}
  </select>
  <select id="selectProjectByNewDate2" resultMap="BaseMobileMap" parameterType="java.lang.Integer">
    select distinct p.*,c.companyName AS c_name,e.realName AS e_name
    from project p,expert e,company c WHERE p.c_id=c.id AND p.e_id=e.id AND p.current != 3 order by publicDate limit 5,#{projectSize,jdbcType=INTEGER}
  </select>
  <select id="selectProjectListByEID" resultMap="BaseMobileMap" parameterType="java.lang.Integer">
    select distinct p.*,c.companyName AS c_name,e.realName AS e_name
    from project p,expert e,company c WHERE p.c_id=c.id AND p.e_id=e.id AND p.e_id=#{eId,jdbcType=INTEGER} order by publicDate
  </select>
  <select id="selectProjectListByCID" resultMap="BaseMobileMap" parameterType="java.lang.Integer">
    select distinct p.*,c.companyName AS c_name
    from project p,company c WHERE p.c_id=c.id AND p.c_id=#{cId,jdbcType=INTEGER} order by publicDate
  </select>
  <select id="selectProjectLikeKey" resultMap="BaseMobileMap" parameterType="java.lang.String">
    select distinct p.*,c.companyName AS c_name
    from project p,company c WHERE p.c_id=c.id AND p.name LIKE #{key,jdbcType=VARCHAR} order by publicDate
  </select>
  
  
</mapper>